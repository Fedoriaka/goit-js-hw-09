{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,gBACpCE,EAAaH,SAASC,cAAc,eACpCG,EAASJ,SAASC,cAAc,iBACtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEvC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC1BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIPR,EAAKgB,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBAKF,IAJA,IAAMC,EAAOC,SAAShB,EAAWiB,OAC7BC,EAAQF,SAASjB,EAAWkB,OAC1BE,EAASH,SAASf,EAAOgB,OAEtBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlClB,EAFiBkB,EAAI,EACPF,GAEXG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAEhDuB,QAAQC,IAAI,uBAAwCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DyB,OAAM,SAAAP,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOM,QACd,sBAAuCJ,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,OAE/CuB,QAAQC,IAAI,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3Dc,GAASH,C,CAEXnB,EAAKmC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=delay]');\nconst delayInput = document.querySelector('[name=step]');\nconst amount = document.querySelector('[name=amount]');\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  const step = parseInt(delayInput.value);\n  let first = parseInt(firstDelay.value);\n  const number = parseInt(amount.value);\n\n  for (let i = 0; i < number; i += 1) {\n    const position = i + 1;\n    const delay = first;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    first += step;\n  }\n  form.reset();\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","step","parseInt","value","first","number","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","reset"],"version":3,"file":"03-promises.a60cf84e.js.map"}