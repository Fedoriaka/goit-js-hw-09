{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,gBACpCE,EAAaH,SAASC,cAAc,eACpCG,EAASJ,SAASC,cAAc,iBACtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEvC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC1BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbR,EAAKgB,iBAAiB,UAAU,SAAUC,GACxCA,EAAEC,iBACF,MAAMC,EAAOC,SAAShB,EAAWiB,OACjC,IAAIC,EAAQF,SAASjB,EAAWkB,OAChC,MAAME,EAASH,SAASf,EAAOgB,OAE/B,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlClB,EAFiBkB,EAAI,EACPF,GAEXG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBrB,QAAiBC,OAExCqB,QAAQC,IAAI,uBAAqBvB,QAAiBC,MAAU,IAE7DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA5B,GAAS6B,OAAOK,QACd,sBAAoBzB,QAAiBC,OAEvCqB,QAAQC,IAAI,sBAAoBvB,QAAeC,MAAU,IAE7Dc,GAASH,C,CAEXnB,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=delay]');\nconst delayInput = document.querySelector('[name=step]');\nconst amount = document.querySelector('[name=amount]');\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n  const step = parseInt(delayInput.value);\n  let first = parseInt(firstDelay.value);\n  const number = parseInt(amount.value);\n\n  for (let i = 0; i < number; i += 1) {\n    const position = i + 1;\n    const delay = first;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    first += step;\n  }\n  form.reset();\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","step","parseInt","value","first","number","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure","reset"],"version":3,"file":"03-promises.38fc9066.js.map"}